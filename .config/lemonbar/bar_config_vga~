#!/bin/bash

 # Color directory
CD="$HOME/.config/termite/config"

# Fetch the Colors
BG="#1b1b1b"
FG="#FFFFFF"

BLACK=$(cat ${CD} | grep -i color8 | tail -c 8)
RED=$(cat ${CD} | grep -i color9 | tail -c 8)
GREEN=$(cat ${CD} | grep -i color10 | tail -c 8)
YELLOW=$(cat ${CD} | grep -i color11 | tail -c 8)
BLUE=$(cat ${CD} | grep -i color12 | tail -c 8)
MAGENTA=$(cat ${CD} | grep -i color13 | tail -c 8)
CYAN=$(cat ${CD} | grep -i color14 | tail -c 8)
WHITE=$(cat ${CD} | grep -i color15 | tail -c 8)

# Fonts
FONT1="-wuncon-siji-medium-r-normal--10-100-75-75-c-80-iso10646-1"
FONT2="-misc-fontawesome-medium-r-normal-*-*-*-*-*-p-*-iso10646-*"
FONT3="Roboto-10:Regular"
FONT4=""
FONT5=""
FONT6=""


# Panel 
PW=1872
PH=24
PX=24
PY=12



#Actions
#VOLT="amixer sset Master toggle"
#VOLU="amixer sset Master 2%+"
#VOLD="amixer sset Master 2%-"
#TMUS="mpc toggle"
#NMUS="mpc next"

# Functions

#Workspace number 

 ws(){
	ws=$(i3-msg -t get_outputs | sed 's/.*"current_workspace":"\([^"]*\)".*/\1/')
	echo "%{F$CYAN}${ws#*:}"
}

music() {
state=$(mpc status | grep -oe '\[[a-z]*\]')
song=$(mpc current)

if [[ $(wc -c <<< "$song") -gt 48 ]]; then
    song="$(cut -b 1-48 <<< "$song") ~"
fi
if   [[ -z $state ]]; then
    token=""
elif [[ $state == "[paused]" ]]; then
    token=""
else
    token="";
fi

echo "$token $song"
}

 cpu(){
	cpu=$(mpstat -P ALL 1 1 | awk '(NR>11) {print $3+$5}' | paste -d " " - - - -)
	echo "%{F$CYAN} ${cpu}"
}
	
 net(){
	wifi=$(cat /sys/class/net/wlp*/operstate)        [6-7]*) token="" ;;
        *)      token="" ;;
    esac
elif [[ "$ethn" == "up" ]]; then
    token=""
else
    token=""
fi

echo "$token"
}

ram(){
	ram=$(free -h | awk '/\-\/+/ {print $3}')
	echo "%{F$CYAN} ${ram}"
}

 temp(){
  temp=$(sensors | grep temp1 | sed '1d;s/.*+\([0-9]*\).*/\1/')
	echo "%{F$CYAN} ${temp}C"
}

 clock(){
  tr '[:lower:]' '[:upper:]' <<< $(date "+%I:%M %p")
}

 vol(){
  
volume=$(amixer sget Master | sed -n "0,/.*\[\([0-9]\+\)%\].*/s//\1/p")
state=$(amixer sget Master | grep -Eoe '\[(on|off)\]')

if   [[ $volume -eq 0 || $state == '[off]' ]]; then
    token=''
elif [[ $volume -gt 50 ]]; then
    token=''
else
    token=''
fi

echo "$token $volume%"
}

pow(){
	
percentage=$(acpi --battery | awk '{gsub(/,/, "");} {print $4}' | sed 's/.$//')

case $percentage in
    [0-9])      token='' ;;
    [1-2][0-9]) token='' ;;
    [3-4][0-9]) token='' ;;
    [5-6][0-9]) token='' ;;
    [7-8][0-9]) token='' ;;
    9[0-9]|100) token='' ;;
esac
if [[ $(acpi -a | grep on) ]]; then
    token=''
fi

echo "$token $percentage%"
}

while :; do 	
	  echo " %{l}  $(ws)           %{c}           $(clock)               %{r}      $(net)   $(pow)  $(vol) $(music) "
	 sleep .5
done | lemonbar -g ${PW}x${PH}+${PX}+${PY} -f "$FONT1" -f "$FONT2" -f "$FONT3" -f "$FONT4" -f "$FONT5" -B "$BG" -F "$FG" -p -d  | \
    while :; do read line; eval $line; done &
